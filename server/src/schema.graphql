type Team {
    id: Int,
    city: String,
    nickname: String,
    abbreviation: String
}

type Player {
    id: Int,
    firstName: String,
    lastName: String,
    team: Team,
    position: String,
    rank: Int,
    tier: Int,
    bye: Int
}

type Projection {
    id: Int,
    player: Player,
    platform: String,
    completions: Int,
    attempts: Int,
    passYards: Int,
    passTd: Int,
    interception: Int,
    carries: Int,
    rushYards: Int,
    rushTd: Int,
    fumbles: Int,
    targets: Int,
    receptions: Int,
    receivingYards: Int,
    receivingTd: Int
}

type Query {
    teamById(id: Int): Team,
    teamByAbbreviation(abbreviation: String): Team,
    teams: [Team],
    playerById(id: Int): [Player],
    players: [Player],
    projections: [Projection],
    projectionsByPlatform(platform: String): [Projection],
    projectionsByPlayer(player: Int): [Projection]
}

type Mutation {
    createTeam(city: String!, nickname: String!, abbreviation: String!): Boolean!,
    createPlayer(firstName: String!, lastName: String!, team: Int!, position: String!,
        rank: Int!, tier: Int!, bye: Int!): Boolean!,
    addProjection(player: Int!, platform: String!, completions: Int!, 
        attempts: Int!, passYards: Int!, passTd: Int!, interception: Int!, 
        carries: Int!, rushYards: Int!, rushTd: Int!, fumbles: Int!, 
        targets: Int!, receptions: Int!, receivingYards: Int!, 
        receivingTd: Int!): Boolean
}