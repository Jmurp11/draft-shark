type Team {
    id: String,
    city: String,
    nickname: String,
    abbreviation: String
}

type Player {
    id: String,
    firstName: String,
    lastName: String,
    teamId: Team,
    position: String
}

type Projection {
    id: String,
    playerId: Player,
    platform: String,
    completions: Int,
    attempts: Int,
    passYards: Int,
    passTd: Int,
    interception: Int,
    carries: Int,
    rushYards: Int,
    rushTd: Int,
    fumbles: Int,
    targets: Int,
    receptions: Int,
    receivingYards: Int,
    receivingTd: Int
}

type Query {
    getTeamById(id: String): Team,
    getTeams: [Team],
    getPlayerById(id: String): Player,
    getPlayers: [Player],
    getProjections: [Projection],
    getProjectionsByPlatform(platform: String): [Projection],
    getProjectionsByPlayer(playerId: String): [Projection]
}

type Mutation {
    createTeam(city: String!, nickname: String!, abbreviation: String!): Boolean!,
    createPlayer(firstName: String!, lastName: String!, teamId: String!, 
        position: String!): Boolean!,
    addProjection(playerId: String!, platform: String!, completions: Int!, 
        attempts: Int!, passYards: Int!, passTd: Int!, interception: Int!, 
        carries: Int!, rushYards: Int!, rushTd: Int!, fumbles: Int!, 
        targets: Int!, receptions: Int!, receivingYards: Int!, 
        receivingTd: Int!): Boolean
}